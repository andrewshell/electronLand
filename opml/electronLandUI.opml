<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Fri, 05 May 2017 22:31:05 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: electronLandUI</title>
		<dateCreated>Tue, 25 Apr 2017 20:47:08 GMT</dateCreated>
		<dateModified>Fri, 05 May 2017 22:31:05 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 6, 10</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>83</windowTop>
		<windowLeft>785</windowLeft>
		<windowBottom>1040</windowBottom>
		<windowRight>2050</windowRight>
		</head>
	<body>
		<outline text="/fargo.io/code/shared/electronland/">
			<outline text="outlinersettings.opml">
				<outline text="Notes" created="Sun, 08 Jun 2014 15:10:42 GMT" pgfnum="42033">
					<outline text="&lt;%prefs.checkboxPref (&quot;One note per day&quot;, &quot;flOneNotePerDay&quot;)%&gt;"/>
					<outline text="&lt;%prefs.checkboxPref (&quot;Month-based&quot;, &quot;flPlusIconMonthBased&quot;)%&gt;"/>
					<outline text="&lt;%prefs.stringPref (&quot;Type&quot;, &quot;typeInsertedNode&quot;, &quot;The type attribute for newly created notes.&quot;)%&gt;"/>
					</outline>
				</outline>
			<outline text="outlinerhomepage.js">
				<outline text="const shell = require (__dirname + &quot;/lib/electronshell.js&quot;);"/>
				<outline text="const fs = require (&quot;fs&quot;);   "/>
				<outline text=""/>
				<outline text="var currentFilePath = undefined;"/>
				<outline text="var whenLastKeystroke = new Date ();"/>
				<outline text="var editorSerialnum = 0;"/>
				<outline text="var idCurrentEditor = undefined;"/>
				<outline text="var whenLastSave = undefined;"/>
				<outline text="var flPrefsChanged = false;"/>
				<outline text="var twUserInfo;"/>
				<outline text=""/>
				<outline text="var appPrefs = { ">
					<outline text="flOneNotePerDay: true, typeInsertedNode: &quot;outline&quot;, flPlusIconMonthBased: true, //for opNewPost"/>
					<outline text="lastLinkUrl: &quot;&quot;,"/>
					<outline text="lastInstantOutlineUrl: &quot;&quot;"/>
					<outline text="};"/>
					</outline>
				<outline text=""/>
				<outline text="//public outlines">
					<outline text="function callInstantOutlinerGlue (urlOutline, title, description, callback) {">
						<outline text="var apiUrl = &quot;http://instantoutliner.com/createglue?&quot;, flfirst = true;"/>
						<outline text="function pushparam (name, val) {">
							<outline text="if (!flfirst) {">
								<outline text="apiUrl += &quot;&amp;&quot;;"/>
								<outline text="}"/>
								</outline>
							<outline text="apiUrl += name + &quot;=&quot; + encodeURIComponent (val);"/>
							<outline text="flfirst = false;"/>
							<outline text="}"/>
							</outline>
						<outline text="pushparam (&quot;url&quot;, urlOutline);"/>
						<outline text="pushparam (&quot;title&quot;, title);"/>
						<outline text="pushparam (&quot;description&quot;, description);"/>
						<outline text="pushparam (&quot;socketserver&quot;, shell.getConfig ().urlChatLogSocket);"/>
						<outline text="readHttpFile (apiUrl, function (urlInstant) {">
							<outline text="if (callback !== undefined) {">
								<outline text="callback (urlInstant);"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function uploadPublicOpml (callback) { //5/3/17 by DW">
						<outline text="Changes" isComment="true">
							<outline text="5/3/17; 11:54:39 AM by DW">
								<outline text="If it's a public file, upload the OPML."/>
								</outline>
							</outline>
						<outline text="var headers = opGetHeaders ();"/>
						<outline text="if (getBoolean (headers.flPublic)) {">
							<outline text="var tab = shell.getCurrentTab (), remotePath = shell.getConfig ().outlinesPath + stringLastField (tab.f, &quot;/&quot;);"/>
							<outline text="twUploadFile (remotePath, getCurrentOpml (), &quot;text/xml&quot;, false, function (data) {">
								<outline text="console.log (&quot;uploadPublicOpml: data == &quot; + jsonStringify (data));"/>
								<outline text="var headers = opGetHeaders ();"/>
								<outline text="if (headers.urlPublic === undefined) {">
									<outline text="headers.urlPublic = data.url;"/>
									<outline text="opSetHeaders (headers);"/>
									<outline text="}"/>
									</outline>
								<outline text="if (callback !== undefined) {">
									<outline text="callback (data.url);"/>
									<outline text="}"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function makeOutlinePublic () {">
						<outline text="confirmDialog (&quot;Make the current outline public?&quot;, function () {">
							<outline text="var headers = opGetHeaders ();"/>
							<outline text="headers.flPublic = true;"/>
							<outline text="opSetHeaders (headers);"/>
							<outline text="uploadPublicOpml (function (urlPublicOpml) {">
								<outline text="var title = headers.title, description = headers.description;"/>
								<outline text="if (headers.longTitle !== undefined) {">
									<outline text="title = headers.longTitle;"/>
									<outline text="}"/>
									</outline>
								<outline text="if (description === undefined) {">
									<outline text="description = &quot;&quot;;"/>
									<outline text="}"/>
									</outline>
								<outline text="callInstantOutlinerGlue (urlPublicOpml, title, description, function (urlInstant) {">
									<outline text="var headers = opGetHeaders ();"/>
									<outline text="headers.urInstant = urlInstant"/>
									<outline text="headers.urlUpdateSocket = shell.getConfig ().urlChatLogSocket;"/>
									<outline text="opSetHeaders (headers);"/>
									<outline text="askDialog (&quot;The public URL for this tab is:&quot;, urlInstant, &quot;&quot;, function (url, flcancel) {" created="Tue, 08 Jan 2013 01:26:19 GMT" pgfnum="16860">
										<outline text="});"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function viewOutlineOpml () {">
						<outline text="var headers = opGetHeaders ();"/>
						<outline text="if (headers.urlPublic === undefined) {">
							<outline text="alertDialog (&quot;Can't view the OPML because the file isn't public.&quot;)"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="shell.openUrl (headers.urlPublic);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function subscribeToInstantOutlineCommand () {">
						<outline text="askDialog (&quot;Enter the link for the outline:&quot;, appPrefs.lastInstantOutlineUrl, &quot;Enter some kind of URL to an instant outline&quot;, function (url, flcancel) {" created="Tue, 08 Jan 2013 01:26:19 GMT" pgfnum="16860">
							<outline text="if (!flcancel) {">
								<outline text="appPrefs.lastInstantOutlineUrl = url; //something like http://instantoutliner.com/1"/>
								<outline text="prefsChanged ();"/>
								<outline text="readHttpFile (url + &quot;?format=data&quot;, function (jsontext) {">
									<outline text="var jstruct = JSON.parse (jsontext);"/>
									<outline text="console.log (&quot;subscribeToInstantOutlineCommand: jsontext == &quot; + jsontext);"/>
									<outline text="var tab = shell.addInstantTab (url, jstruct);"/>
									<outline text="readHttpFile (tab.urlOpmlFile, function (opmltext) {">
										<outline text="tab.temp.idThisEditor = startEditor (opmltext);"/>
										<outline text="showEditor (true);"/>
										<outline text="});"/>
										</outline>
									<outline text=""/>
									<outline text=""/>
									<outline text="var ixtab = addInstantOutlineTab (url, jstruct), tab = appPrefs.myTabs [ixtab];" isComment="true"/>
									<outline text="readHttpFile (tab.urlOpmlFile, function (opmltext) {" isComment="true">
										<outline text="tab.opmltext = opmltext;" isComment="true" created="Wed, 16 Jan 2013 00:08:18 GMT" pgfnum="17213"/>
										<outline text="prefsChanged ();"/>
										<outline text="buildTabs ();"/>
										<outline text="tabClick (ixtab, opmltext);"/>
										<outline text="});"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text="//title-description dialog">
					<outline text="function closeTitleDescriptionDialog () {">
						<outline text="$(&quot;#idTitleDescriptionDialog&quot;).modal (&quot;hide&quot;); "/>
						<outline text="}"/>
						</outline>
					<outline text="function okTitleDescriptionDialog () {">
						<outline text="var title = $(&quot;#idShortTitle&quot;).val ();"/>
						<outline text="opSetTitle (title);"/>
						<outline text="var theHeaders = opGetHeaders ();"/>
						<outline text="theHeaders.longTitle = $(&quot;#idLongTitle&quot;).val ();"/>
						<outline text="theHeaders.description = $(&quot;#idDescription&quot;).val ();"/>
						<outline text="opSetHeaders (theHeaders);"/>
						<outline text="closeTitleDescriptionDialog ();"/>
						<outline text="var tab = appPrefs.myTabs [appPrefs.ixCurrentTab];"/>
						<outline text="tab.name = title;"/>
						<outline text="buildTabs ();"/>
						<outline text="}"/>
						</outline>
					<outline text="function titleDescriptionDialog () {">
						<outline text="var theHeaders = opGetHeaders ();"/>
						<outline text="function setDialogValue (id, val) {">
							<outline text="if (val === undefined) {">
								<outline text="val = &quot;&quot;;"/>
								<outline text="}"/>
								</outline>
							<outline text="$(&quot;#&quot; + id).val (val);"/>
							<outline text="}"/>
							</outline>
						<outline text="setDialogValue (&quot;idShortTitle&quot;, opGetTitle ());"/>
						<outline text="setDialogValue (&quot;idLongTitle&quot;, theHeaders.longTitle);"/>
						<outline text="setDialogValue (&quot;idDescription&quot;, theHeaders.description);"/>
						<outline text="$(&quot;#idTitleDescriptionDialog&quot;).modal (&quot;show&quot;); "/>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text=""/>
				<outline text="function getInitialOpmlText (title) {">
					<outline text="var s = " created="Sun, 17 Feb 2013 16:05:01 GMT" pgfnum="18855">
						<outline text="&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;ISO-8859-1\&quot;?&gt;\n&lt;opml version=\&quot;2.0\&quot;&gt;\n\t&lt;head&gt;\n\t\t&lt;title&gt;[%title%]&lt;/title&gt;\n\t\t&lt;dateCreated&gt;[%created%]&lt;/dateCreated&gt;\n\t\t&lt;dateModified&gt;[%created%]&lt;/dateModified&gt;\n\t\t&lt;/head&gt;\n\t&lt;body&gt;\n\t\t&lt;outline text=\&quot;\&quot; created=\&quot;[%created%]\&quot; /&gt;\n\t\t&lt;/body&gt;\n\t&lt;/opml&gt;&quot;;" created="Sun, 17 Feb 2013 16:55:11 GMT" pgfnum="18868"/>
						</outline>
					<outline text="var replacetable = {">
						<outline text="title: title,"/>
						<outline text="created: new Date ().toUTCString ()"/>
						<outline text="};"/>
						</outline>
					<outline text="s = multipleReplaceAll (s, replacetable, false, &quot;[%&quot;, &quot;%]&quot;);"/>
					<outline text="return (s);"/>
					<outline text="}"/>
					</outline>
				<outline text="function fileFromPath (f) {">
					<outline text="return (stringLastField (f, &quot;/&quot;));"/>
					<outline text="}"/>
					</outline>
				<outline text="function setOpmlHeadersBeforeSaving () {">
					<outline text="if (twIsTwitterConnected ()) {">
						<outline text="var headers = opGetHeaders (), screenName = twGetScreenName ();"/>
						<outline text="headers.ownerId = &quot;https://twitter.com/&quot; + screenName + &quot;/&quot;;"/>
						<outline text="headers.ownerName = twUserInfo.name;"/>
						<outline text="headers.ownerTwitterScreenName = screenName;"/>
						<outline text="opSetHeaders ();"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function prefsChanged () {">
					<outline text="flPrefsChanged = true;"/>
					<outline text="}"/>
					</outline>
				<outline text="function tweetThisIconClick () {">
					<outline text="var theText = opGetLineText (), type = opGetOneAtt (&quot;type&quot;), url = opGetOneAtt (&quot;url&quot;), ctTweetChars = theText.length;"/>
					<outline text="function doTweet () {">
						<outline text="twOutlinerTweet (theText, undefined, opGetCursorContext ());" created="Wed, 12 Jun 2013 17:23:22 GMT" pgfnum="25966"/>
						<outline text="}"/>
						</outline>
					<outline text="if (type == &quot;tweet&quot;) {">
						<outline text="twViewCursorTweet ();" created="Thu, 14 Feb 2013 16:13:25 GMT" pgfnum="18620"/>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="if (url !== undefined) { //it had a url attribute">
							<outline text="theText += &quot; &quot; + url;"/>
							<outline text="ctTweetChars += twGetUrlLength () + 1;"/>
							<outline text="}"/>
							</outline>
						<outline text="if (ctTweetChars &gt; appPrefs.maxTweetLength) {">
							<outline text="alertDialog (&quot;Can't send the tweet because it is too long. It's &quot; + ctTweetChars + &quot; characters, the max is &quot; + appPrefs.maxTweetLength + &quot;.&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (appPrefs.flConfirmTweets) {">
								<outline text="confirmDialog (&quot;Tweet the text?&quot;, function () {" created="Wed, 27 Feb 2013 16:18:09 GMT" pgfnum="19236">
									<outline text="doTweet ();" created="Wed, 12 Jun 2013 17:23:22 GMT" pgfnum="25966"/>
									<outline text="});" created="Sun, 14 Apr 2013 02:15:30 GMT" pgfnum="22673"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="doTweet ();" created="Wed, 12 Jun 2013 17:23:22 GMT" pgfnum="25966"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function linkIconClick () {">
					<outline text="var defaultUrl = appPrefs.lastLinkUrl, urlAtt = opGetOneAtt (&quot;url&quot;);" created="Wed, 13 Mar 2013 14:12:11 GMT" pgfnum="20295"/>
					<outline text="if ((!opInTextMode ()) &amp;&amp; (urlAtt != undefined)) {" created="Wed, 13 Mar 2013 14:13:30 GMT" pgfnum="20300">
						<outline text="defaultUrl = urlAtt;" created="Wed, 13 Mar 2013 14:13:36 GMT" pgfnum="20301"/>
						<outline text="}" created="Wed, 13 Mar 2013 14:13:39 GMT" pgfnum="20302"/>
						</outline>
					<outline text="askDialog (&quot;Enter URL for link:&quot;, defaultUrl, &quot;http://&quot;, function (url, flcancel) {" created="Tue, 08 Jan 2013 01:26:19 GMT" pgfnum="16860">
						<outline text="if (!flcancel) {">
							<outline text="if (opInTextMode ()) {">
								<outline text="opLink (url);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="opSetOneAtt (&quot;type&quot;, &quot;link&quot;);" created="Wed, 23 Jan 2013 18:14:17 GMT" pgfnum="17579"/>
								<outline text="opSetOneAtt (&quot;url&quot;, url);" created="Wed, 23 Jan 2013 18:14:17 GMT" pgfnum="17579"/>
								<outline text="opMarkChanged ();"/>
								<outline text="}"/>
								</outline>
							<outline text="appPrefs.lastLinkUrl = url;" created="Mon, 11 Feb 2013 19:09:27 GMT" pgfnum="18560"/>
							<outline text="prefsChanged ();"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function editAttributes () {">
					<outline text="tabEdShow (&quot;Edit attributes&quot;, opGetAtts (), function (editedTable) {">
						<outline text="opSetAtts (editedTable);"/>
						<outline text="console.log (&quot;editAttributes: atts == &quot; + jsonStringify (editedTable));"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function showEditor (flDisplay) {">
					<outline text="var val;"/>
					<outline text="if (flDisplay) {">
						<outline text="val = &quot;block&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="val = &quot;none&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text="$(&quot;#idEditorContainer&quot;).css (&quot;display&quot;, val);"/>
					<outline text="}"/>
					</outline>
				<outline text="function addOutlinerCallbacks () {" created="Sat, 16 Feb 2013 22:13:36 GMT" pgfnum="18835">
					<outline text="function myExpandCallback () { //6/29/16 by DW">
						<outline text="Changes" isComment="true">
							<outline text="6/29/16; 1:50:08 PM by DW">
								<outline text="Cribbed this code so we can use the nodeStorage HTTP proxy to make HTTP requests. No CORS problems there because we're in the same domain."/>
								</outline>
							</outline>
						<outline text="try {">
							<outline text="var type = opGetOneAtt (&quot;type&quot;), url = opGetOneAtt (&quot;url&quot;);" created="Mon, 11 Feb 2013 16:47:23 GMT" pgfnum="18516"/>
							<outline text="console.log (&quot;myExpandCallback: type == &quot; + type);"/>
							<outline text="if ((type == &quot;link&quot;) &amp;&amp; (url != undefined)) {" created="Thu, 14 Feb 2013 16:12:23 GMT" pgfnum="18617">
								<outline text="shell.openUrl (url);" created="Thu, 14 Feb 2013 16:13:25 GMT" pgfnum="18620"/>
								<outline text="return;" created="Thu, 14 Feb 2013 16:13:30 GMT" pgfnum="18621"/>
								<outline text="}" created="Thu, 14 Feb 2013 16:12:28 GMT" pgfnum="18618"/>
								</outline>
							<outline text="if ((type == &quot;include&quot;) &amp;&amp; (url != undefined)) { //2/16/15 by DW" created="Thu, 14 Feb 2013 17:32:53 GMT" pgfnum="18648">
								<outline text="var headers = {&quot;Accept&quot;: &quot;text/x-opml&quot;}; //7/17/15 by DW -- the same header the OPML Editor uses for includes."/>
								<outline text="console.log (&quot;myExpandCallback: headers = &quot; + jsonStringify (headers));"/>
								<outline text="twReadHttpWithProxy (url, function (s) {">
									<outline text="console.log (&quot;opExpandCallback: expanding the include == &quot; + url);" isComment="true"/>
									<outline text="console.log (&quot;opExpandCallback: s == &quot; + s);" isComment="true"/>
									<outline text="opDeleteSubs ();" created="Wed, 27 Feb 2013 14:57:47 GMT" pgfnum="19214"/>
									<outline text="opInsertXml (s, right); "/>
									<outline text="opClearChanged ();"/>
									<outline text="}, undefined, headers);"/>
									</outline>
								<outline text="return;"/>
								<outline text="}" created="Thu, 14 Feb 2013 17:33:20 GMT" pgfnum="18650"/>
								</outline>
							<outline text="if (type == &quot;tweet&quot;) { //7/17/16 by DW">
								<outline text="if (opCountSubs () == 0) {" created="Fri, 14 Jun 2013 18:51:16 GMT" pgfnum="26211">
									<outline text="twViewCursorTweet ();" created="Thu, 14 Feb 2013 16:13:25 GMT" pgfnum="18620"/>
									<outline text="return;" created="Thu, 14 Feb 2013 16:13:30 GMT" pgfnum="18621"/>
									<outline text="}" created="Thu, 14 Feb 2013 16:12:28 GMT" pgfnum="18618"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="catch (err) {">
							<outline text="console.log (&quot;opExpandCallback: error == &quot; + err.message);    "/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="$(&quot;#outliner&quot;).concord ({">
						<outline text="&quot;callbacks&quot;: {" created="Sun, 17 Feb 2013 16:58:55 GMT" pgfnum="18876">
							<outline text="&quot;opInsert&quot;: function (op) {" created="Tue, 08 Jan 2013 17:24:49 GMT" pgfnum="16878">
								<outline text="opInsertCallback (op);"/>
								<outline text="},"/>
								</outline>
							<outline text="&quot;opCursorMoved&quot;: function (op) {" created="Tue, 08 Jan 2013 17:24:49 GMT" pgfnum="16878">
								<outline text="console.log (&quot;cursor moved&quot;);"/>
								<outline text="whenLastUserAction = new Date (); " created="Fri, 04 Apr 2014 21:09:34 GMT" pgfnum="39965"/>
								<outline text=""/>
								<outline text="if (opGetOneAtt (&quot;created&quot;) === undefined) { //no &lt;i&gt;created&lt;/i&gt; att, add one -- 1/22/17 by DW">
									<outline text="opSetOneAtt (&quot;created&quot;, new Date ().toUTCString ());"/>
									<outline text="}"/>
									</outline>
								<outline text=""/>
								<outline text="updateAttsDisplay ();"/>
								<outline text="opMarkChanged (); //1/30/15 by DW"/>
								<outline text="},"/>
								</outline>
							<outline text="&quot;opKeystroke&quot;: function (event) {" created="Tue, 08 Jan 2013 17:24:49 GMT" pgfnum="16878">
								<outline text="if (event.metaKey) {">
									<outline text="if (event.which == 75) { //cmd-k is a shortcut for the link icon">
										<outline text="linkIconClick ();"/>
										<outline text="}"/>
										</outline>
									<outline text="if (event.which == 191) {" isComment="true">
										<outline text="console.log (&quot;Cmd-/&quot;);"/>
										<outline text="runCursorScript ();"/>
										<outline text="event.stopPropagation ();"/>
										<outline text="return;"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="if (event.which == 8) { //5/1/15 by DW">
									<outline text="opMarkChanged ();"/>
									<outline text="}"/>
									</outline>
								<outline text="if ((event.which &gt;= 33) &amp;&amp; (event.which &lt;= 36)) { //4/30/15 by DW -- pageup, pagedown, home, end">
									<outline text="//Concord was inserting these, wiping out the headline, this is where Doc's empty headlines were coming from.">
										<outline text="//so we just translate them to 31, which Concord will ignore."/>
										<outline text="//the best solution is to fix Concord so it ignores these."/>
										<outline text="//but I really don't want to rebuild it right now. too much other stuff depends on it. "/>
										</outline>
									<outline text="event.which = 31;"/>
									<outline text="}"/>
									</outline>
								<outline text="if ((event.which == 191) &amp;&amp; event.metaKey &amp;&amp; event.shiftKey) { //cmd-? -- 3/27/13 by DW" created="Wed, 09 Jan 2013 14:30:41 GMT" pgfnum="16921">
									<outline text="showCribsheet ();"/>
									<outline text="}" created="Wed, 09 Jan 2013 14:31:27 GMT" pgfnum="16924"/>
									</outline>
								<outline text="opKeystrokeCallback (event);"/>
								<outline text="},"/>
								</outline>
							<outline text="&quot;opExpand&quot;: function () {" created="Mon, 11 Feb 2013 16:41:26 GMT" pgfnum="18511">
								<outline text="myExpandCallback (); "/>
								<outline text="},"/>
								</outline>
							<outline text="&quot;opCollapse&quot;: function () {" created="Mon, 11 Feb 2013 16:41:26 GMT" pgfnum="18511">
								<outline text="opCollapseCallback (); "/>
								<outline text="}"/>
								</outline>
							<outline text="}" created="Sun, 17 Feb 2013 16:59:03 GMT" pgfnum="18877"/>
							</outline>
						<outline text="});" created="Sat, 16 Feb 2013 23:53:44 GMT" pgfnum="18845"/>
						</outline>
					<outline text="$(&quot;#outliner&quot;).keyup (function () {">
						<outline text="whenLastUserAction = new Date ();"/>
						<outline text="updateCharacterCount ();" isComment="true"/>
						<outline text="});"/>
						</outline>
					<outline text="$(&quot;#outliner&quot;).keydown (function (ev) {" isComment="true">
						<outline text="if (ev.which == 191) {">
							<outline text="console.log (&quot;happy birthday davey&quot;);"/>
							<outline text="runCursorScript ();"/>
							<outline text="event.stopPropagation ();"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Sat, 16 Feb 2013 22:13:41 GMT" pgfnum="18836"/>
					</outline>
				<outline text="function setOutlinerText (idOutlineObject, opmltext, flReadOnly) {">
					<outline text="idDefaultOutliner = idOutlineObject; //set global"/>
					<outline text="opInitOutliner (opmltext, flReadOnly);" created="Wed, 16 Jan 2013 00:08:18 GMT" pgfnum="17213"/>
					<outline text="addOutlinerCallbacks ();"/>
					<outline text="}"/>
					</outline>
				<outline text="function getCurrentOpml () {">
					<outline text="return (opOutlineToXml (&quot;&quot;, &quot;&quot;));"/>
					<outline text="}"/>
					</outline>
				<outline text="function startEditor (opmltext) {">
					<outline text="var idThisEditor = &quot;idEditor&quot; + editorSerialnum++;"/>
					<outline text="if (idCurrentEditor !== undefined) {">
						<outline text="$(&quot;#&quot; + idCurrentEditor).css (&quot;display&quot;, &quot;none&quot;);"/>
						<outline text="}"/>
						</outline>
					<outline text="$(&quot;#idEditorContainer&quot;).append (&quot;&lt;div class=\&quot;divEditor\&quot; id=\&quot;&quot; + idThisEditor + &quot;\&quot;&gt;&lt;/div&gt;&quot;);"/>
					<outline text="idCurrentEditor = idThisEditor;"/>
					<outline text="setOutlinerText (idThisEditor, opmltext, false);"/>
					<outline text="$(&quot;#&quot; + idThisEditor).on (&quot;keyup&quot;, function (event) {">
						<outline text="whenLastKeystroke = new Date ();"/>
						<outline text="console.log (&quot;keyup&quot;);"/>
						<outline text="statusChanged ();" isComment="true"/>
						<outline text="});"/>
						</outline>
					<outline text="return (idThisEditor);"/>
					<outline text="}"/>
					</outline>
				<outline text="function viewActiveTab (tab, callback) {">
					<outline text="if (tab.temp.idThisEditor === undefined) {">
						<outline text="if (tab.flInstantOutline) {">
							<outline text="console.log (&quot;viewActiveTab: tab.flInstantOutline == &quot; + tab.flInstantOutline);"/>
							<outline text="readHttpFile (tab.urlOpmlFile, function (opmltext) {">
								<outline text="tab.temp.idThisEditor = startEditor (opmltext);"/>
								<outline text="showEditor (true);"/>
								<outline text="});"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="var f = tab.f;"/>
							<outline text="fs.readFile (f, function (err, data) {">
								<outline text="tab.temp.idThisEditor = startEditor (data.toString ());"/>
								<outline text="showEditor (true);"/>
								<outline text="statusChanged ();" isComment="true"/>
								<outline text="if (callback !== undefined) {">
									<outline text="callback ();"/>
									<outline text="}"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="if (idCurrentEditor !== undefined) {">
							<outline text="$(&quot;#&quot; + idCurrentEditor).css (&quot;display&quot;, &quot;none&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="$(&quot;#&quot; + tab.temp.idThisEditor).css (&quot;display&quot;, &quot;block&quot;);"/>
						<outline text="idCurrentEditor = tab.temp.idThisEditor;"/>
						<outline text="if (callback !== undefined) {">
							<outline text="callback ();"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function openOutlineInTab (f, callback) {">
					<outline text="var tab = shell.addTab (stringLastField (f, &quot;/&quot;), f);"/>
					<outline text="currentFilePath = f;"/>
					<outline text="viewActiveTab (tab, callback);"/>
					<outline text="}"/>
					</outline>
				<outline text="function newFileCommand () {">
					<outline text="shell.newFileDialog (function (f) {">
						<outline text="fs.writeFile (f, getInitialOpmlText (fileFromPath (f)), function (err) {">
							<outline text="openOutlineInTab (f, function () {">
								<outline text="});"/>
								</outline>
							<outline text="}); "/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function openFileCommand () {">
					<outline text="shell.openFileDialog (function (filelist) {">
						<outline text="openOutlineInTab (filelist [0]);"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function closeTabCommand () {">
					<outline text="shell.closeTab ();"/>
					<outline text="}"/>
					</outline>
				<outline text="function openSettingsDialog () {">
					<outline text="shell.openSettingsDialog (function (appPrefsFromStorage) {">
						<outline text="for (var x in appPrefsFromStorage) {">
							<outline text="appPrefs [x] = appPrefsFromStorage [x];"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="shell.openSettingsDialog ();" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text="function showHidePage () {" isComment="true">
					<outline text="var ctTabs = shell.getTabsArray ().length, displayval = &quot;block&quot;;"/>
					<outline text="if (ctTabs == 0) {">
						<outline text="displayval = &quot;none&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text="if (displayval != $(&quot;#idPageBody&quot;).css (&quot;display&quot;)) {">
						<outline text="console.log (&quot;showHidePage: displayval == &quot; + displayval);"/>
						<outline text="$(&quot;#idPageBody&quot;).css (&quot;display&quot;, displayval);"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everySecond () {">
					<outline text="var now = clockNow ();"/>
					<outline text="if (secondsSince (whenLastKeystroke) &gt;= 0.5) {">
						<outline text="if (opHasChanged ()) {" created="Mon, 11 Mar 2013 20:59:25 GMT" pgfnum="20165">
							<outline text="var opmltext;"/>
							<outline text="setOpmlHeadersBeforeSaving ()"/>
							<outline text="opmltext = getCurrentOpml ();"/>
							<outline text="console.log (&quot;everySecond: saving opml. &quot; + opmltext.length + &quot; chars, &quot; + secondsSince (whenLastKeystroke) + &quot; secs since keystroke.&quot;);"/>
							<outline text="fs.writeFile (currentFilePath, opmltext, function (err) {" created="Fri, 22 Mar 2013 01:52:21 GMT" pgfnum="21049">
								<outline text="whenLastSave = now;" created="Sat, 02 Mar 2013 21:32:50 GMT" pgfnum="19559"/>
								<outline text="opClearChanged ();"/>
								<outline text="uploadPublicOpml (); //5/3/17 by DW"/>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Mon, 11 Mar 2013 20:59:45 GMT" pgfnum="20170"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="if (flPrefsChanged) {">
						<outline text="flPrefsChanged = false;"/>
						<outline text="shell.setPrefs (appPrefs);"/>
						<outline text="}"/>
						</outline>
					<outline text="showHidePage ();" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text="function startup () {">
					<outline text="var options = {">
						<outline text="tabClickCallback: function (tab) {">
							<outline text="console.log (&quot;tabClickCallback: tab == &quot; + jsonStringify (tab));"/>
							<outline text="currentFilePath = tab.f;"/>
							<outline text="viewActiveTab (tab);"/>
							<outline text="},"/>
							</outline>
						<outline text="tabCloseCallback: function (tab) {">
							<outline text="console.log (&quot;tabCloseCallback: tab == &quot; + jsonStringify (tab));"/>
							<outline text="},"/>
							</outline>
						<outline text="tabUpdatedCallback: function (tab, theData) {">
							<outline text="console.log (&quot;tabUpdatedCallback: theData.length == &quot; + theData.length);"/>
							<outline text="setOutlinerText (tab.temp.idThisEditor, theData, true);"/>
							<outline text="},"/>
							</outline>
						<outline text="applySettingsCallback: function (theSettings) {">
							<outline text="console.log (&quot;applySettingsCallback: theSettings.favoriteColor == &quot; + theSettings.favoriteColor);" isComment="true"/>
							<outline text="$(&quot;#idPageBody&quot;).css (&quot;color&quot;, theSettings.favoriteColor);" isComment="true"/>
							<outline text="}"/>
							</outline>
						<outline text="};"/>
						</outline>
					<outline text="shell.init (options, function (appPrefsFromStorage) {">
						<outline text="for (var x in appPrefsFromStorage) {">
							<outline text="appPrefs [x] = appPrefsFromStorage [x];"/>
							<outline text="}"/>
							</outline>
						<outline text="prefsChanged ();"/>
						<outline text="showEditor (true);"/>
						<outline text="if (twIsTwitterConnected ()) {">
							<outline text="twGetUserInfo (twGetScreenName (), function (userinfo) {">
								<outline text="twUserInfo = userinfo;"/>
								<outline text="console.log (&quot;startup: twUserInfo == &quot; + jsonStringify (twUserInfo));"/>
								<outline text="twGetTwitterConfig (function () { ">
									<outline text="self.setInterval (everySecond, 1000); "/>
									<outline text="});"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="self.setInterval (everySecond, 1000); "/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="outlinerindex.html">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title id=&quot;idPageTitle&quot;&gt;Hello Outliner!&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text=""/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/storage/api.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text=""/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/concord.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/concordKeyboard.js&quot; /&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/outliner.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/xml.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/arrowpad.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/tableeditor.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fargo.io/code/shared/tableeditor.css&quot;/&gt;"/>
						<outline text=""/>
						<outline text="&lt;script src=&quot;outlinerhomepage.js?x=2&quot;&gt;&lt;/script&gt;"/>
						<outline text=""/>
						<outline text="&lt;style&gt;" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
							<outline text="body {">
								<outline text="font-family: Ubuntu;"/>
								<outline text="font-size: 18px;"/>
								<outline text="background-color: whitesmoke;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divPageBody {">
								<outline text="width: 80%;"/>
								<outline text="margin-top: 100px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="margin-bottom: 400px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divTable {">
								<outline text="display: table; "/>
								<outline text="width: 100%;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divEditorContainer {">
								<outline text="display: none;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divIconContainer {">
								<outline text="display: table-cell;"/>
								<outline text="width: 35px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divIconBar {">
								<outline text="margin-top: 37px;"/>
								<outline text="border-top: 1px solid silver;" isComment="true"/>
								<outline text="text-align: center;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divIcon {" created="Fri, 19 Apr 2013 02:03:35 GMT" pgfnum="22960">
								<outline text="padding-top: 5px;" created="Mon, 04 Mar 2013 00:30:20 GMT" pgfnum="19659"/>
								<outline text="padding-bottom: 35px;" created="Mon, 04 Mar 2013 00:30:20 GMT" pgfnum="19659"/>
								<outline text="text-align: right;"/>
								<outline text="}" created="Fri, 19 Apr 2013 02:03:45 GMT" pgfnum="22962"/>
								</outline>
							<outline text=".divIcon i {" created="Sun, 17 Feb 2013 20:18:34 GMT" pgfnum="18904">
								<outline text="font-size: 24px;" created="Sun, 17 Feb 2013 20:18:43 GMT" pgfnum="18906"/>
								<outline text="color: silver; " created="Sun, 17 Feb 2013 20:18:46 GMT" pgfnum="18907"/>
								<outline text="}" created="Sun, 17 Feb 2013 20:18:39 GMT" pgfnum="18905"/>
								</outline>
							<outline text=".divEditor { ">
								<outline text="width: 900px;" isComment="true"/>
								<outline text="min-height: 400px;"/>
								<outline text="border: 1px solid silver;"/>
								<outline text="padding: 10px;"/>
								<outline text="margin-top: 25px;" isComment="true"/>
								<outline text="margin-bottom: 10px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divFilepath {">
								<outline text="font-size: 15px;"/>
								<outline text="margin-top: 5px;"/>
								<outline text="margin-bottom: 10px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divVersionNumber {">
								<outline text="font-size: 12px;"/>
								<outline text="float: right;"/>
								<outline text="padding: 12px;"/>
								<outline text="display: none;" isComment="true"/>
								<outline text="}"/>
								</outline>
							<outline text=".divStatusMessage {">
								<outline text="display: none;"/>
								<outline text="font-size: 18px;" isComment="true"/>
								<outline text="color: gray;" isComment="true"/>
								<outline text="min-height: 1.5em;" isComment="true"/>
								<outline text="border: 1px solid gainsboro;" isComment="true"/>
								<outline text="margin-bottom: 20px;" isComment="true"/>
								<outline text="background-color: white;" isComment="true"/>
								<outline text="width: 30em;" isComment="true"/>
								<outline text="margin-left: auto;" isComment="true"/>
								<outline text="margin-right: auto;" isComment="true"/>
								<outline text="}"/>
								</outline>
							<outline text=""/>
							<outline text="/* tabs */">
								<outline text=".nav-tabs {">
									<outline text="margin-bottom: -1px;"/>
									<outline text="font-size: 16px;"/>
									<outline text="}"/>
									</outline>
								<outline text=".nav-tabs &gt; li &gt; a {">
									<outline text="cursor: pointer;"/>
									<outline text="color: inherit;"/>
									<outline text="}"/>
									</outline>
								<outline text=".nav-tabs &gt; .active &gt; a, .nav-tabs &gt; .active &gt; a:hover, .nav-tabs &gt; .active &gt; a:focus {">
									<outline text="background-color: white;"/>
									<outline text="border: 1px solid silver;"/>
									<outline text="border-bottom-color: transparent;"/>
									<outline text="}"/>
									</outline>
								<outline text=".divTabDisplay {">
									<outline text="border: 1px solid silver;" isComment="true"/>
									<outline text="background-color: white;"/>
									<outline text="min-height: 400px;" isComment="true"/>
									<outline text="padding-top: 10px;" isComment="true"/>
									<outline text="margin-bottom: 500px;" isComment="true"/>
									<outline text="margin-top: 110px;" isComment="true"/>
									<outline text="}"/>
									</outline>
								<outline text=".spTabTitleText {">
									<outline text="margin-left: 2px;"/>
									<outline text="}"/>
									</outline>
								<outline text=".iconUpdateWaiting {">
									<outline text="font-weight: bold;"/>
									<outline text="color: limegreen;"/>
									<outline text="}"/>
									</outline>
								<outline text=".nav-tabs &gt; li &gt; a, .nav-pills &gt; li &gt; a {">
									<outline text="padding-left: 8px;"/>
									<outline text="padding-right: 8px;"/>
									<outline text="}"/>
									</outline>
								<outline text=".divMyTabs {">
									<outline text="display: table-cell;"/>
									<outline text="vertical-align: top;"/>
									<outline text="}"/>
									</outline>
								</outline>
							<outline text="/* title-description dialog */">
								<outline text=".divTitleDescriptionDialog {">
									<outline text="}"/>
									</outline>
								<outline text=".divTitleDescriptionDialog label { ">
									<outline text="display: inline;"/>
									<outline text="float: left;"/>
									<outline text="text-align: right;"/>
									<outline text="padding-top: 4px;"/>
									<outline text="width: 130px;"/>
									<outline text="margin-right: .5em;"/>
									<outline text="font-family: Arial;"/>
									<outline text="font-size: 16px;"/>
									<outline text="line-height: 140%;" isComment="true"/>
									<outline text="}"/>
									</outline>
								<outline text=".divTitleDescriptionDialog .xlarge {" created="Thu, 03 Jan 2013 22:51:02 GMT" pgfnum="16600">
									<outline text="width: 530px;"/>
									<outline text="font-size: 16px;" created="Tue, 01 Jan 2013 16:39:50 GMT" pgfnum="16549"/>
									<outline text="height: auto;" created="Tue, 01 Jan 2013 16:35:06 GMT" pgfnum="16544"/>
									<outline text="}" created="Thu, 03 Jan 2013 22:51:18 GMT" pgfnum="16602"/>
									</outline>
								<outline text=".divTitleDescriptionDialog .modal {" created="Tue, 01 Jan 2013 03:59:34 GMT" pgfnum="16538">
									<outline text="left: 40%;" created="Tue, 01 Jan 2013 03:59:57 GMT" pgfnum="16539"/>
									<outline text="width: 740px;" created="Tue, 01 Jan 2013 04:00:36 GMT" pgfnum="16541"/>
									<outline text="}" created="Tue, 01 Jan 2013 04:00:11 GMT" pgfnum="16540"/>
									</outline>
								<outline text=".divTitleDescriptionDialog .clearfix { ">
									<outline text="margin-bottom: 15px;"/>
									<outline text="}"/>
									</outline>
								<outline text=".divTitleDescriptionDialog .btn {" created="Wed, 26 Dec 2012 23:19:22 GMT" pgfnum="16391">
									<outline text="width: 80px;" created="Wed, 26 Dec 2012 23:19:34 GMT" pgfnum="16393"/>
									<outline text="margin-left: 5px;" created="Wed, 26 Dec 2012 23:22:19 GMT" pgfnum="16394"/>
									<outline text="}" created="Wed, 26 Dec 2012 23:19:31 GMT" pgfnum="16392"/>
									</outline>
								</outline>
							<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
							</outline>
						<outline text=""/>
						<outline text="&lt;link href=&quot;lib/electronshell.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divMenubar&quot; id=&quot;idMenubar&quot;&gt;" created="Thu, 28 Mar 2013 21:39:05 GMT" pgfnum="21615">
							<outline text="&lt;div class=&quot;topbar-wrapper&quot; style=&quot;z-index: 5;&quot;&gt;">
								<outline text="&lt;div class=&quot;navbar navbar-fixed-top&quot; data-dropdown=&quot;dropdown&quot;&gt;">
									<outline text="&lt;div class=&quot;divVersionNumber&quot;&gt;">
										<outline text="&lt;span id=&quot;idVersionNumber&quot;&gt;&lt;/span&gt;"/>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;div class=&quot;navbar-inner&quot;&gt;">
										<outline text="&lt;div class=&quot;container&quot;&gt;">
											<outline text="&lt;a class=&quot;brand&quot; href=&quot;/&quot;&gt;&lt;span id=&quot;idMenuProductName&quot;&gt;&lt;/span&gt;&lt;/a&gt;"/>
											<outline text="&lt;ul class=&quot;nav&quot;&gt;">
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idFileMenu&quot;&gt; ">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;File&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;newFileCommand ();&quot;&gt;New file...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;openFileCommand ();&quot;&gt;Open file...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;addTabCommand ();&quot;&gt;Add tab...&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;closeTabCommand ();&quot;&gt;Close&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;shell.openUserDataFolder ();&quot;&gt;Open data folder&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;viewOutlineOpml ();&quot;&gt;View OPML...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;titleDescriptionDialog ();&quot;&gt;Set title &amp; description...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;makeOutlinePublic ();&quot;&gt;Make outline public...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;subscribeToInstantOutlineCommand ();&quot;&gt;Subscribe to outline...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;openSettingsDialog ()&quot;&gt;Settings...&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="" isComment="true"/>
														<outline text="" isComment="true"/>
														<outline text="" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opExpandAllLevels ();&quot;&gt;Expand All Subs&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opExpandEverything ();&quot;&gt;Expand Everything&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opCollapse ();&quot;&gt;Collapse&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opCollapseEverything ();&quot;&gt;Collapse Everything&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opDeleteLine ();&quot;&gt;Delete Line&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (up, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-U&lt;/span&gt;Move Up&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (down, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-D&lt;/span&gt;Move Down&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (left, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-L&lt;/span&gt;Move Left&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (right, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-R&lt;/span&gt;Move Right&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opPromote ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-[&lt;/span&gt;Promote&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opDemote ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-]&lt;/span&gt;Demote&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;myToggleArrowPad ();&quot;&gt;&lt;span id=&quot;idArrowPadCommandString&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;" isComment="true" created="Sun, 28 Jul 2013 18:38:02 GMT" pgfnum="28370"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;publishOpml ();&quot;&gt;Get public link...&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idOutlinerMenu&quot;&gt; ">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Outliner&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opExpand ();&quot;&gt;Expand&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opExpandAllLevels ();&quot;&gt;Expand All Subs&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opExpandEverything ();&quot;&gt;Expand Everything&lt;/a&gt;&lt;/li&gt;"/>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opCollapse ();&quot;&gt;Collapse&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opCollapseEverything ();&quot;&gt;Collapse Everything&lt;/a&gt;&lt;/li&gt;"/>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opDeleteLine ();&quot;&gt;Delete Line&lt;/a&gt;&lt;/li&gt;"/>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;dropdown-submenu&quot;&gt;">
															<outline text="&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot;&gt;Build...&lt;/a&gt;">
																<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
																	<outline text="&lt;li&gt;&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot; onclick=&quot;buildListicle ()&quot;&gt;Listicle&lt;/a&gt;&lt;/li&gt;"/>
																	<outline text="&lt;li&gt;&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot; onclick=&quot;buildStatusCenter ()&quot;&gt;Status Center&lt;/a&gt;&lt;/li&gt;"/>
																	</outline>
																<outline text="&lt;/ul&gt;"/>
																</outline>
															<outline text="&lt;/li&gt;"/>
															</outline>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opFindCommand ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-F&lt;/span&gt;Find...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opFindAgainCommand ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-G&lt;/span&gt;Find again&lt;/a&gt;&lt;/li&gt;"/>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;toggleRenderMode ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-`&lt;/span&gt;&lt;span id=&quot;idRenderModeCommandString&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;" created="Sun, 28 Jul 2013 18:38:02 GMT" pgfnum="28370"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idReorgMenu&quot;&gt; ">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Reorg&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (up, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-U&lt;/span&gt;Move Up&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (down, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-D&lt;/span&gt;Move Down&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (left, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-L&lt;/span&gt;Move Left&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (right, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-R&lt;/span&gt;Move Right&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="" created="Mon, 12 May 2014 23:20:46 GMT" pgfnum="41579"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;toggleArrowPad ();&quot;&gt;&lt;span id=&quot;idArrowPadCommandString&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;" created="Sun, 28 Jul 2013 18:38:02 GMT" pgfnum="28370"/>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opToggleComment ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-\&lt;/span&gt;Comment&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;" created="Sun, 28 Jul 2013 18:38:02 GMT" pgfnum="28370"/>
														<outline text="" created="Sat, 07 Sep 2013 16:56:40 GMT" pgfnum="29953"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opPromote ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-[&lt;/span&gt;Promote&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opDemote ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-]&lt;/span&gt;Demote&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idFriendsMenu&quot;&gt; " isComment="true">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Friends&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;addFriend ();&quot;&gt;Add Friend...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;addSuggestedUsersCommand ();&quot;&gt;Add Suggested Users...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;highlightFriendsWithUpdates ();&quot;&gt;Check for Updates Now&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;addIndividualTweet ();&quot;&gt;Add Individual Tweet...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;deleteAllTweets ();&quot;&gt;Delete All Tweets...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;unboldAll ();&quot;&gt;Unbold All...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idDocsMenu&quot;&gt; " isComment="true">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Docs&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a href=&quot;http://happy.smallpict.com/2014/06/24/gettingStartedWithHappyFriends.html&quot; target=&quot;_blank&quot;&gt;Getting Started 1.2.3&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://happy.smallpict.com/2014/06/24/welcomeToHappyFriends.html&quot; target=&quot;_blank&quot;&gt;The story of Happy Friends&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://smallpicture.com/outlinerHowto.html&quot; target=&quot;_blank&quot;&gt;Outliner Howto&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://happy.smallpict.com/2014/06/24/questions.html&quot; target=&quot;_blank&quot;&gt;Questions?&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a a href=&quot;#&quot; onclick=&quot;showCribsheet ();&quot;&gt;Cribsheet&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://happy.smallpict.com/2014/07/10/aboutRateLimits.html&quot; target=&quot;_blank&quot;&gt;About rate limits&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://happy.smallpict.com/2014/08/10/happyFriendsV049.html&quot; target=&quot;_blank&quot;&gt;Happy Friends 0.49&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://happy.smallpict.com/2014/07/10/happyFriendsV046.html&quot; target=&quot;_blank&quot;&gt;Happy Friends 0.46&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://happy.smallpict.com/2014/06/28/happyFriends043.html&quot; target=&quot;_blank&quot;&gt;Happy Friends 0.43&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://happy.smallpict.com/2014/06/27/happyFriends042.html&quot; target=&quot;_blank&quot;&gt;Happy Friends 0.42&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idDaveMenu&quot;&gt; " isComment="true">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Dave&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a href=&quot;http://scripting.com/&quot; target=&quot;_blank&quot;&gt;Scripting News&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://thesaurus.land/&quot; target=&quot;_blank&quot;&gt;Thesaurus Land&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://little.porkchop.io/&quot; target=&quot;_blank&quot;&gt;Little Pork Chop&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://littleoutliner.com/&quot; target=&quot;_blank&quot;&gt;Little Outliner&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://fargo.io/&quot; target=&quot;_blank&quot;&gt;Fargo&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://littlecardeditor.com/&quot; target=&quot;_blank&quot;&gt;Little Card Editor&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;ul class=&quot;nav pull-right&quot;&gt;">
												<outline text="&lt;li class=&quot;dropdown&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;&lt;span id=&quot;idTwitterIcon&quot;&gt;&lt;/span&gt;&lt;span id=&quot;idTwitterUsername&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;aboutDialog ();&quot;&gt;About &lt;span id=&quot;idMenuAboutProductName&quot;&gt;&lt;/span&gt;...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;openSettingsDialog ();&quot;&gt;Settings...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;shell.toggleTwitterConnect ();&quot; id=&quot;idTwitterConnectMenuItem&quot;&gt;&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Thu, 28 Mar 2013 21:39:17 GMT" pgfnum="21616"/>
							</outline>
						<outline text="&lt;div class=&quot;divSettingsDialog&quot;&gt;">
							<outline text="&lt;div id=&quot;idSettingsDialog&quot; class=&quot;modal hide fade&quot; tabindex=&quot;-1&quot; role=&quot;dialog&quot; aria-labelledby=&quot;windowTitleLabel&quot; aria-hidden=&quot;true&quot;&gt;">
								<outline text="&lt;div class=&quot;modal-header&quot;&gt;" isComment="true">
									<outline text="&lt;a href=&quot;#&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot;&gt;&amp;times;&lt;/a&gt;"/>
									<outline text="&lt;h3&gt;Preferences&lt;/h3&gt;"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;modal-body&quot;&gt;">
									<outline text="&lt;div class=&quot;divDialogElements&quot;&gt;">
										<outline text="&lt;%prefs.includeOutline (&quot;http://fargo.io/code/shared/electronland/outlinersettings.opml&quot;)%&gt; " created="Mon, 31 Dec 2012 16:55:33 GMT" pgfnum="16518"/>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;modal-footer&quot;&gt;">
									<outline text="&lt;a href=&quot;#&quot; class=&quot;btn&quot; onclick=&quot;shell.closeSettingsDialog ();&quot;&gt;Cancel&lt;/a&gt;"/>
									<outline text="&lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot; onclick=&quot;shell.okSettingsDialog ();&quot;&gt;OK&lt;/a&gt;"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;div class=&quot;divTitleDescriptionDialog&quot;&gt;" created="Fri, 10 May 2013 17:29:51 GMT" pgfnum="23716">
							<outline text="&lt;div id=&quot;idTitleDescriptionDialog&quot; class=&quot;modal hide fade&quot; tabindex=&quot;-1&quot; role=&quot;dialog&quot; aria-hidden=&quot;true&quot;&gt;">
								<outline text="&lt;div class=&quot;modal-header&quot;&gt;">
									<outline text="&lt;a href=&quot;#&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot;&gt;&amp;times;&lt;/a&gt;"/>
									<outline text="&lt;h3&gt;Set titles and description...&lt;/h3&gt;"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;modal-body&quot;&gt;">
									<outline text="&lt;div class=&quot;divDialogElements&quot;&gt;">
										<outline text="&lt;fieldset&gt;">
											<outline text="&lt;div class=&quot;divPrefs&quot;&gt;">
												<outline text="&lt;div class=&quot;clearfix&quot;&gt;">
													<outline text="&lt;label for=&quot;shortTitle&quot;&gt;Short title:&lt;/label&gt;"/>
													<outline text="&lt;div class=&quot;input&quot;&gt;">
														<outline text="&lt;input class=&quot;xlarge prefsInput&quot; id=&quot;idShortTitle&quot; name=&quot;shortTitle&quot; size=&quot;50&quot; type=&quot;text&quot; value=&quot;&quot; placeholder=&quot;The title that's displayed in the tab when the file is open.&quot;&gt;"/>
														<outline text="&lt;/div&gt;"/>
														</outline>
													<outline text="&lt;/div&gt;"/>
													</outline>
												<outline text="&lt;div class=&quot;clearfix&quot;&gt;">
													<outline text="&lt;label for=&quot;longTitle&quot;&gt;Long title:&lt;/label&gt;"/>
													<outline text="&lt;div class=&quot;input&quot;&gt;">
														<outline text="&lt;input class=&quot;xlarge prefsInput&quot; id=&quot;idLongTitle&quot; name=&quot;longTitle&quot; size=&quot;50&quot; type=&quot;text&quot; value=&quot;&quot; placeholder=&quot;The title that's displayed in Reader.&quot;&gt;"/>
														<outline text="&lt;/div&gt;"/>
														</outline>
													<outline text="&lt;/div&gt;"/>
													</outline>
												<outline text="&lt;div class=&quot;clearfix&quot;&gt;">
													<outline text="&lt;label for=&quot;description&quot;&gt;Description:&lt;/label&gt;"/>
													<outline text="&lt;div class=&quot;input&quot;&gt;">
														<outline text="&lt;textarea class=&quot;xxlarge&quot; id=&quot;idDescription&quot; name=&quot;description&quot; cols=&quot;70&quot; rows=&quot;4&quot; placeholder=&quot;How the file is described when shown in Reader.&quot;&gt;&lt;/textarea&gt;"/>
														<outline text="&lt;/div&gt;"/>
														</outline>
													<outline text="&lt;/div&gt;"/>
													</outline>
												<outline text="&lt;/div&gt;"/>
												</outline>
											<outline text="&lt;/fieldset&gt;"/>
											</outline>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;modal-footer&quot;&gt;">
									<outline text="&lt;a href=&quot;#&quot; class=&quot;btn&quot; onclick=&quot;closeTitleDescriptionDialog ();&quot;&gt;Cancel&lt;/a&gt;"/>
									<outline text="&lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot; onclick=&quot;okTitleDescriptionDialog ();&quot;&gt;OK&lt;/a&gt;"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Fri, 10 May 2013 17:30:07 GMT" pgfnum="23719"/>
							</outline>
						<outline text="&lt;div class=&quot;divPageBody&quot; id=&quot;idPageBody&quot;&gt;">
							<outline text="&lt;div class=&quot;divStatusMessage&quot; id=&quot;idStatusMessageContainer&quot;&gt;">
								<outline text="&lt;div class=&quot;alert alert-info&quot;&gt;">
									<outline text="&lt;span id=&quot;idStatusMessage&quot; /&gt;"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;div id=&quot;idTabsContainer&quot;&gt;">
								<outline text="&lt;div class=&quot;divTable&quot;&gt;">
									<outline text="&lt;div class=&quot;divIconContainer&quot;&gt;">
										<outline text="&lt;div class=&quot;divIconBar&quot; id=&quot;idIconBar&quot;&gt;">
											<outline text="&lt;div style=&quot;position: fixed !important&quot;&gt;">
												<outline text="&lt;div class=&quot;divIcon&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; onclick=&quot;opNewPost ();&quot; data-toggle=&quot;tooltip&quot; title=&quot;New note.&quot;&gt;">
														<outline text="&lt;i class=&quot;fa fa-plus&quot; id=&quot;idPostIcon&quot;&gt;&lt;/i&gt;"/>
														<outline text="&lt;/a&gt;"/>
														</outline>
													<outline text="&lt;/div&gt;"/>
													</outline>
												<outline text="&lt;div class=&quot;divIcon&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; onclick=&quot;linkIconClick ();&quot; data-toggle=&quot;tooltip&quot; title=&quot;Link to another page.&quot;&gt;">
														<outline text="&lt;i class=&quot;fa fa-link&quot; id=&quot;idLinkIcon&quot;&gt;&lt;/i&gt;"/>
														<outline text="&lt;/a&gt;"/>
														</outline>
													<outline text="&lt;/div&gt;"/>
													</outline>
												<outline text="&lt;div class=&quot;divIcon&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; onclick=&quot;editAttributes ();&quot; data-toggle=&quot;tooltip&quot; title=&quot;Edit attributes.&quot;&gt;">
														<outline text="&lt;i class=&quot;fa fa-suitcase&quot; id=&quot;idEditAttsIcon&quot;&gt;&lt;/i&gt;"/>
														<outline text="&lt;/a&gt;"/>
														</outline>
													<outline text="&lt;/div&gt;"/>
													</outline>
												<outline text="&lt;div class=&quot;divIcon&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; onclick=&quot;tweetThisIconClick ();&quot; data-toggle=&quot;tooltip&quot; title=&quot;Tweet the text of the cursor headline.&quot;&gt;">
														<outline text="&lt;i class=&quot;fa fa-twitter&quot; id=&quot;idTweetThisIcon&quot;&gt;&lt;/i&gt;"/>
														<outline text="&lt;/a&gt;"/>
														</outline>
													<outline text="&lt;/div&gt;"/>
													</outline>
												<outline text="&lt;div class=&quot;divIcon&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; onclick=&quot;shell.lockIconClick ();&quot; data-toggle=&quot;tooltip&quot; title=&quot;Lock or unlock the current outline display.&quot;&gt;">
														<outline text="&lt;i class=&quot;fa fa-lock&quot; id=&quot;idLockIcon&quot;&gt;&lt;/i&gt;"/>
														<outline text="&lt;/a&gt;"/>
														</outline>
													<outline text="&lt;/div&gt;"/>
													</outline>
												<outline text="&lt;/div&gt;"/>
												</outline>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;div class=&quot;divMyTabs&quot; id=&quot;idTabs&quot;&gt;">
										<outline text="&lt;ul id=&quot;idTabList&quot; class=&quot;nav nav-tabs&quot;&gt;">
											<outline text="&lt;/ul&gt;"/>
											</outline>
										<outline text="&lt;div class=&quot;divTabDisplay&quot; id=&quot;idTabDisplay&quot;&gt;">
											<outline text="&lt;div class=&quot;divEditorContainer&quot; id=&quot;idEditorContainer&quot;&gt;">
												<outline text="&lt;div class=&quot;divEditor&quot; id=&quot;idEditor&quot; placeholder=&quot;Edit your text here.&quot;&gt;" isComment="true">
													<outline text="&lt;/div&gt;"/>
													</outline>
												<outline text="&lt;/div&gt;"/>
												</outline>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divFilepath&quot; id=&quot;idFilepath&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			<outline text="config.json">
				<outline text="{">
					<outline text="&quot;productname&quot;: &quot;electricOutliner&quot;," created="Sun, 06 Jan 2013 15:39:06 GMT" pgfnum="16734"/>
					<outline text="&quot;productnameForDisplay&quot;: &quot;Electric Outliner&quot;," created="Sun, 06 Jan 2013 15:39:06 GMT" pgfnum="16734"/>
					<outline text="&quot;description&quot;: &quot;The Concord outliner in an Electron shell.&quot;," created="Wed, 07 May 2014 12:04:38 GMT" pgfnum="41257"/>
					<outline text="&quot;urlTwitterServer&quot;: &quot;http://storage.littleoutliner.com/&quot;,"/>
					<outline text="&quot;urlChatLogSocket&quot;: &quot;ws://storage.littleoutliner.com:1242/&quot;,"/>
					<outline text="&quot;outlinesPath&quot;: &quot;electric/&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.41e&quot;" created="Fri, 04 Jan 2013 22:12:08 GMT" pgfnum="16702"/>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="readme.md">
				<outline text="# electronLand"/>
				<outline text="My shell for Electron apps, along with Electron Outliner."/>
				<outline text="For now a private repo. This serves as a backup of what's on my local system."/>
				</outline>
			</outline>
		<outline text="build script">
			<outline text="nodeEditorSuite.utilities.buildElectronLand ()"/>
			</outline>
		</body>
	</opml>
